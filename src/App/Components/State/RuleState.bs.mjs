// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as ReactContext from "../Context/ReactContext.bs.mjs";
import * as JsxRuntime from "react/jsx-runtime";

function defaultValue_1(param) {
  
}

var defaultValue = [
  /* HideRule */1,
  defaultValue_1
];

var include = ReactContext.Make({
      defaultValue: defaultValue
    });

var Provider = include.Provider;

var Context_t = include.t;

var Context_use = include.use;

var Context = {
  t: Context_t,
  Provider: Provider,
  use: Context_use
};

function RuleState$Provider(props) {
  var match = React.useReducer((function (state, action) {
          if (state) {
            return /* DisplayRule */0;
          } else {
            return /* HideRule */1;
          }
        }), /* HideRule */1);
  return JsxRuntime.jsx(Provider.make, {
              value: [
                match[0],
                match[1]
              ],
              children: props.children
            });
}

var Provider$1 = {
  make: RuleState$Provider
};

export {
  Context ,
  Provider$1 as Provider,
}
/* include Not a pure module */
